name: urlaubsverwaltung

services:
  urlaubsverwaltung:
    image: urlaubsverwaltung/urlaubsverwaltung:5.26.0
    network_mode: "host"
    container_name: urlaubsverwaltung
    environment:
      SERVER_PORT: 8080
      # Database
      SPRING_DATASOURCE_URL: jdbc:postgresql://localhost:5434/urlaubsverwaltung
      SPRING_DATASOURCE_USERNAME: urlaubsverwaltung
      SPRING_DATASOURCE_PASSWORD: urlaubsverwaltung
      # Mail
      UV_MAIL_FROM: urlaubsverwaltung@example.org # TODO: Korrekte E-Mail-Adresse eintragen
      UV_MAIL_SENDER: urlaubsverwaltung@example.org # TODO: Korrekte E-Mail-Adresse eintragen
      UV_MAIL_FROMDISPLAYNAME: urlaubsverwaltung # TODO: Korrekte Absenderbezeichnung eintragen
      UV_MAIL_REPLYTO: urlaubsverwaltung@example.org # TODO: Korrekte E-Mail-Adresse eintragen
      UV_MAIL_REPLYTODISPLAYNAME: Urlaubsverwaltung Fakult채t WiWi # TODO: Korrekte Absenderbezeichnung eintragen (sofern gew체nscht)
      UV_MAIL_APPLICATIONURL: http://mailhog:8025 # TODO: Korrekte URL des Mailservers eintragen
      UV_MAIL_ADMINISTRATOR: admin@example.org # TODO: Korrekte E-Mail-Adresse des Administrators eintragen
      SPRING_MAIL_HOST: localhost
      SPRING_MAIL_PORT: 1025
      # Calendar
      UV_CALENDAR_ORGANIZER: organizer@fak.wiwi.htw-dresden.de # TODO: Korrekte E-Mail-Adresse des Organisators eintragen
      # OpenID Connect identity provider
      SPRING_SECURITY_OAUTH2_CLIENT_REGISTRATION_DEFAULT_CLIENT-ID: urlaubsverwaltung
      SPRING_SECURITY_OAUTH2_CLIENT_REGISTRATION_DEFAULT_CLIENT-SECRET: urlaubsverwaltung-secret
      SPRING_SECURITY_OAUTH2_CLIENT_REGISTRATION_DEFAULT_CLIENT-NAME: urlaubsverwaltung
      SPRING_SECURITY_OAUTH2_CLIENT_REGISTRATION_DEFAULT_PROVIDER: default
      SPRING_SECURITY_OAUTH2_CLIENT_REGISTRATION_DEFAULT_SCOPE: openid,profile,email,roles
      SPRING_SECURITY_OAUTH2_CLIENT_REGISTRATION_DEFAULT_AUTHORIZATION-GRANT-TYPE: authorization_code
      # URL f체r die Webanwendung - <UV_HOST>/login/oauth2/code/{registrationId}
      SPRING_SECURITY_OAUTH2_CLIENT_REGISTRATION_DEFAULT_REDIRECT-URI: http://192.168.178.10:8080/login/oauth2/code/{registrationId} # TODO: Korrekte URL der Webanwendung eintragen
      # URL f체r den OpenID-Server <KEYCLOAK_HOST>/realms/urlaubsverwaltung
      SPRING_SECURITY_OAUTH2_CLIENT_PROVIDER_DEFAULT_ISSUER-URI: http://192.168.178.10:8090/realms/urlaubsverwaltung # TODO: Korrekte URL des Keycloak-Servers eintragen
      SPRING_SECURITY_OAUTH2_RESOURCESERVER_JWT_ISSUER-URI: http://192.168.178.10:8090/realms/urlaubsverwaltung # TODO: Korrekte URL des Keycloak-Servers eintragen
    depends_on:
      keycloak:
        condition: service_started
      postgres:
        condition: service_healthy
      mailhog:
        condition: service_started

  postgres:
    image: postgres:15.3
    container_name: postgres
    environment:
      POSTGRES_DB: urlaubsverwaltung
      POSTGRES_USER: urlaubsverwaltung
      POSTGRES_PASSWORD: urlaubsverwaltung
    ports:
      - "5434:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -d $${POSTGRES_DB} -U $${POSTGRES_USER}"]
      interval: 3s
      timeout: 1s
      retries: 5

  mailhog:
    image: mailhog/mailhog:v1.0.1
    container_name: mailhog
    ports:
      - '1025:1025'
      - '8025:8025'

  keycloak:
    image: quay.io/keycloak/keycloak:26.2.5
    command: [ "start-dev", "--import-realm" ]
    container_name: keycloak
    environment:
      KEYCLOAK_ADMIN: kcadmin
      KEYCLOAK_ADMIN_PASSWORD: qRi6aWEcyanXRyX3
      KC_HTTP_PORT: 8090
      KC_HOSTNAME_STRICT: 'false'
      KC_HOSTNAME_STRICT_HTTPS: 'false'
      KC_HEALTH_ENABLED: 'true'
      KC_CACHE: 'local'
      KC_PROXY: 'edge'
    ports:
      - '8090:8090'
    volumes:
      - ./keycloak/import:/opt/keycloak/data/import
